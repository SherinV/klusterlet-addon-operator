##########################################################################################
# Licensed Materials - Property of IBM
# (C) Copyright IBM Corporation 2018,2019. All Rights Reserved.
# US Government Users Restricted Rights -
# Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
##########################################################################################

# Default values for metering.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

runAsUser: 99

#This is the top level tag in the installer, however it is not passed into helm install command
# metring.namespace becomes just namespace
#metering:

external:
  # ALWAYS set by the installer
  cluster_ip: 127.0.0.1
  cluster_port: 8443
  cluster_name: mycluster
  cfcRouterUrl: "https://icp-management-ingress:8443"

# This variable dictates whether the metering api (meaning the /meteringapi endpoint) will respond to requests
# It is done with a "global" level setting since the lower level env variable that controls the endpoint itself
# is always on for the reader, but off for dm when the api is enabled.  This variable ensures that service onboarding
# will still be done when the metering api is enabled.
api:
  enabled: true

# this variable is used in order to enable the metering internal api.
internalApi:
  enabled: true

arch: ""

mongo:
  host: mongodb
  port: 27017
  username:
    secret: icp-mongodb-admin
    key: user
  password:
    secret: icp-mongodb-admin
    key: password
  clustercertssecret: cluster-ca-cert
  clientcertssecret: icp-mongodb-client-cert

dm:
  enabled: true
  image:
    repository: ibmcom/metering-data-manager
    tag: 3.3.0
    pullPolicy: IfNotPresent

  # nodeSelector is used when the chart is deployed in an ICP environment
  nodeSelectorEnabled: true
  nodeSelector:
    management: "true"
  
  priorityClassNameEnabled: true

  tolerations:
    - key: "dedicated"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "CriticalAddonsOnly"
      operator: "Exists"

  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 2560Mi

  init:
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 100m
        memory: 100Mi
    
ui:
  enabled: true
  image:
    repository: ibmcom/metering-ui
    tag: 3.3.0
    pullPolicy: IfNotPresent

  nodeSelector:
    management: "true"

  tolerations:
    - key: "dedicated"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "CriticalAddonsOnly"
      operator: "Exists"

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi

  init:
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 100m
        memory: 100Mi

mcmui:
  enabled: true
  image:
    repository: ibmcom/metering-mcmui
    tag: 3.3.0
    pullPolicy: IfNotPresent

  nodeSelector:
    management: "true"

  tolerations:
    - key: "dedicated"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "CriticalAddonsOnly"
      operator: "Exists"

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi

  init:
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 100m
        memory: 100Mi

reader:
  enabled: true
  image:
    repository: ibmcom/metering-data-manager
    tag: 3.3.0
    pullPolicy: IfNotPresent

  tolerations:
    - key: "dedicated"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "CriticalAddonsOnly"
      operator: "Exists"

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  
  init:
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 100m
        memory: 100Mi

sender:
  enabled: true
  clusterName: null
  clusterNamespace: null
  hubKubeConfigSecret: null  
  image:
    repository: ibmcom/metering-data-manager
    tag: 3.3.0
    pullPolicy: IfNotPresent

  # nodeSelector is used when the chart is deployed in an ICP environment
  nodeSelectorEnabled: true
  nodeSelector:
    management: "true"

  tolerations:
    - key: "dedicated"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "CriticalAddonsOnly"
      operator: "Exists"

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi


## Optionally specify an array of imagePullSecrets.
#imagePullSecrets: []
#   - myregcred

# serviceAccount is used when the chart is deployed by an operator in a non-ICP environment
serviceAccountNameEnabled: false

# clusterRole is used when the chart is deployed by an operator in a non-ICP environment
clusterRoleEnabled: false

secretcheck:
  command:
    - sh
    - -c
    - |
      set -- $SECRET_LIST
      for secretDirName in $SECRET_DIR_LIST
        do
          while true; do
            echo "`date`: Checking for secret $1"
            ls /sec/$secretDirName/* && break
            echo "`date`: Required secret $1 not found ... try again in 30s"
            sleep 30
        done
        echo "`date`: Secret $1 found"
        shift
      done
      echo "`date`: All required secrets exist"

serviceport:
  iam_token: 10443
  iam_pap: 39001
  platform_identity_management: 4500
  platform_header: 3000

ingress:
  host: ""
