# Licensed Materials - Property of IBM
# 5737-E67
# (C) Copyright IBM Corporation 2016, 2019 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

# Source: metering/templates/metering-mcmui-deployment.yaml
#
# The metering-mcmui pod deploys the Metering MCM UI server as a container
#
# The userid and password for the database are hard-coded in the docker image through
# environment variables in the containers: section below
#
{{- if .Values.mcmui.enabled }}
kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: metering-mcmui
  labels:
    app: metering-mcmui
    component: meteringsvc
    app.kubernetes.io/name: metering-mcmui
    app.kubernetes.io/component: meteringsvc
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/instance: {{ .Release.Name }}

spec:
  replicas: 1
  selector:
    matchLabels:
      app: metering-mcmui
      component: meteringsvc
  template:
    metadata:
      labels:
        app: metering-mcmui
        component: meteringsvc
        app.kubernetes.io/name: metering-mcmui
        app.kubernetes.io/component: meteringsvc
        app.kubernetes.io/managed-by: {{ $.Release.Service }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        app.kubernetes.io/instance: {{ .Release.Name }}

      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        seccomp.security.alpha.kubernetes.io/pod: docker/default
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  {{- if .Values.arch }}
                  - {{ .Values.arch }}
                  {{- else }}
                  - {{ template "arch" . }}
                  {{- end }}
      terminationGracePeriodSeconds: 60
    {{- with .Values.mcmui.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      tolerations:
{{ toYaml .Values.mcmui.tolerations | indent 8 }}
      initContainers:
        - name: "metering-ui-secret-check"
          image: "{{ .Values.dm.image.repository }}:{{ .Values.dm.image.tag }}"
          imagePullPolicy: "{{ .Values.dm.image.pullPolicy }}"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
          resources:
{{ toYaml .Values.mcmui.init.resources | indent 12 }}  
          env:
            - name: SECRET_LIST
              value: "icp-serviceid-apikey-secret platform-oidc-credentials       {{ .Values.mongo.username.secret }}       {{ .Values.mongo.password.secret }} {{ .Values.mongo.clustercertssecret }} {{ .Values.mongo.clientcertssecret }}"
            - name: SECRET_DIR_LIST
              value: "icp-serviceid-apikey-secret platform-oidc-credentials muser-{{ .Values.mongo.username.secret }} mpass-{{ .Values.mongo.password.secret }} {{ .Values.mongo.clustercertssecret }} {{ .Values.mongo.clientcertssecret }}"
          volumeMounts:
            - name: icp-serviceid-apikey-secret
              mountPath: /sec/icp-serviceid-apikey-secret
            - name: platform-oidc-credentials
              mountPath: /sec/platform-oidc-credentials
            - name: muser-{{ .Values.mongo.username.secret }}
              mountPath: /sec/muser-{{ .Values.mongo.username.secret }}
            - name: mpass-{{ .Values.mongo.password.secret }}
              mountPath: /sec/mpass-{{ .Values.mongo.password.secret }}
            - name: mongodb-ca-cert
              mountPath: /sec/{{ .Values.mongo.clustercertssecret }}
            - name: mongodb-client-cert
              mountPath: /sec/{{ .Values.mongo.clientcertssecret }}
{{ toYaml .Values.secretcheck | indent 10 }}            

        - name: "metering-mcmui-init"
          image: "{{ .Values.dm.image.repository }}:{{ .Values.dm.image.tag }}"
          imagePullPolicy: "{{ .Values.dm.image.pullPolicy }}"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
          resources:
{{ toYaml .Values.mcmui.init.resources | indent 12 }}  
          env:
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
            - name: ICP_API_KEY
              valueFrom:
                secretKeyRef:
                  name: icp-serviceid-apikey-secret
                  key: ICP_API_KEY
                  optional: true
            - name: HC_MONGO_HOST
              value: "{{ .Values.mongo.host }}"
            - name: HC_MONGO_PORT
              value: "{{ .Values.mongo.port }}"
            - name: HC_MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.username.secret }}
                  key: {{ .Values.mongo.username.key }}
                  optional: true
            - name: HC_MONGO_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.password.secret }}
                  key: {{ .Values.mongo.password.key }}
                  optional: true
            - name: HC_MONGO_ISSSL
              value: "true"
            - name: HC_MONGO_SSL_CA
              value: "/certs/mongodb-ca/tls.crt"
            - name: HC_MONGO_SSL_CERT
              value: "/certs/mongodb-client/tls.crt"
            - name: HC_MONGO_SSL_KEY
              value: "/certs/mongodb-client/tls.key"
          volumeMounts:
            - name: mongodb-ca-cert
              mountPath: /certs/mongodb-ca
            - name: mongodb-client-cert
              mountPath: /certs/mongodb-client
          command: ["node", "/datamanager/lib/metering_init.js", "verifyOnlyMongo"]
      priorityClassName: "system-cluster-critical"
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end}}
    {{- end }}
      containers:
        - name: metering-mcmui
          image: "{{ .Values.mcmui.image.repository }}:{{ .Values.mcmui.image.tag }}"
          imagePullPolicy: "{{ .Values.mcmui.image.pullPolicy }}"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
          resources:
{{ toYaml .Values.mcmui.resources | indent 12 }}
          ports:
            - containerPort: 3001
          env:
            - name: IS_PRIVATECLOUD
              value: "true"
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
            # beginning of vars needed by security-middleware
            - name: cfcRouterUrl
              value: https://icp-management-ingress:8443
            - name: PLATFORM_IDENTITY_PROVIDER_URL
              value: https://platform-identity-provider:4300
            - name: WLP_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: platform-oidc-credentials
                  key: WLP_CLIENT_ID
                  optional: true
            - name: WLP_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: platform-oidc-credentials
                  key: WLP_CLIENT_SECRET
                  optional: true
            # end of vars needed by security-middleware
            - name: USE_PRIVATECLOUD_SECURITY
              value: "true"
            - name: PORT
              value: "3001"
            - name: PROXY_URI
              value: metering-mcm
            - name: ICP_EXTERNAL_IP
              value: "{{ .Values.external.cluster_ip }}"
            - name: ICP_EXTERNAL_PORT
              value: "{{ .Values.external.cluster_port }}"
            - name: ICP_API_KEY
              valueFrom:
                secretKeyRef:
                  name: icp-serviceid-apikey-secret
                  key: ICP_API_KEY
                  optional: true
            - name: HC_MONGO_HOST
              value: "{{ .Values.mongo.host }}"
            - name: HC_MONGO_PORT
              value: "{{ .Values.mongo.port }}"
            - name: HC_MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.username.secret }}
                  key: {{ .Values.mongo.username.key }}
                  optional: true
            - name: HC_MONGO_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.password.secret }}
                  key: {{ .Values.mongo.password.key }}
                  optional: true
            - name: HC_MONGO_ISSSL
              value: "true"
            - name: HC_MONGO_SSL_CA
              value: "/certs/mongodb-ca/tls.crt"
            - name: HC_MONGO_SSL_CERT
              value: "/certs/mongodb-client/tls.crt"
            - name: HC_MONGO_SSL_KEY
              value: "/certs/mongodb-client/tls.key"
            - name: HC_DM_ALLOW_TEST
              value: "false"
            - name: CLUSTER_NAME
              value: {{ .Values.external.cluster_name }}
            - name: DEFAULT_IAM_TOKEN_SERVICE_PORT
              value: "{{ .Values.serviceport.iam_token }}"
            - name: DEFAULT_IAM_PAP_SERVICE_PORT
              value: "{{ .Values.serviceport.iam_pap }}"
            - name: DEFAULT_PLATFORM_IDENTITY_MANAGEMENT_SERVICE_PORT
              value: "{{ .Values.serviceport.platform_identity_management }}"
            - name: DEFAULT_PLATFORM_HEADER_SERVICE_PORT
              value: "{{ .Values.serviceport.platform_header }}"
          volumeMounts:
            - name: mongodb-ca-cert
              mountPath: /certs/mongodb-ca
            - name: mongodb-client-cert
              mountPath: /certs/mongodb-client
          readinessProbe:
            httpGet:
              path: "/unsecure/readinessProbe"
              scheme: HTTP
              port: 3001
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: "/unsecure/livenessProbe"
              scheme: HTTP
              port: 3001
            initialDelaySeconds: 305
            periodSeconds: 300
            timeoutSeconds: 5
      volumes:
        - name: mongodb-ca-cert
          secret:
            defaultMode: 0644
            secretName: {{ .Values.mongo.clustercertssecret }}
            optional: true
        - name: mongodb-client-cert
          secret:
            defaultMode: 0644
            secretName: {{ .Values.mongo.clientcertssecret }}
            optional: true
        - name: muser-{{ .Values.mongo.username.secret }}
          secret:
            defaultMode: 0644
            secretName: {{ .Values.mongo.username.secret }}
            optional: true
        - name: mpass-{{ .Values.mongo.password.secret }}
          secret:
            defaultMode: 0644
            secretName: {{ .Values.mongo.password.secret }}
            optional: true
        - name: icp-serviceid-apikey-secret
          secret:
            defaultMode: 0644
            secretName: icp-serviceid-apikey-secret
            optional: true
        - name: platform-oidc-credentials
          secret:
            defaultMode: 0644
            secretName: platform-oidc-credentials
            optional: true
{{- end }}