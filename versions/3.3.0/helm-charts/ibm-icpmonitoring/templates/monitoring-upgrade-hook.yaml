{{- if and .Values.grafana.persistentVolume.enabled (eq .Chart.Version "1.4.0") }}
# Licensed Materials - Property of IBM
# IBM Confidential
# OCO Source Materials
# (C) Copyright IBM Corporation 2016, 2019 All Rights Reserved
# The source code for this program is not published or otherwise divested of its trade secrets, irrespective of what has been deposited with the U.S. Copyright Office.

apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: {{ template "prometheus.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "monitoring.fullname" . }}-upgrade-job
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "2"
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  template:
    metadata:
      labels:
        app: {{ template "prometheus.fullname" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      name: {{ template "monitoring.fullname" . }}-upgrade-job
    spec:
{{ include "monitoring.affinity" . | indent 6 }}
      containers:
      - name: cert-gen
        image: {{ .Values.curl.image.repository }}:{{ .Values.curl.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
        - create_upgrade_secret.sh
        env:
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: {{ template "grafana.fullname" . }}-secret
                key: username
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "grafana.fullname" . }}-secret
                key: password
        volumeMounts:
        - name: script
          mountPath: /usr/local/bin/create_upgrade_secret.sh
          subPath: create_upgrade_secret.sh
      volumes:
      - name: script
        configMap:
          name: {{ template "monitoring.fullname" . }}-upgrade-job-config
          items:
          - key: create_upgrade_secret.sh
            path: create_upgrade_secret.sh
            mode: 0777
      restartPolicy: Never

---

apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ template "prometheus.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "monitoring.fullname" . }}-upgrade-job-config
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "1"
data:
  create_upgrade_secret.sh: |
    #!/bin/bash
    echo "create the secret for upgrade"
    cat >> /tmp/body <<EOF
    {
       "apiVersion": "v1",
       "kind": "Secret",
       "type": "Opaque",
       "metadata": {
          "name": "{{ template "monitoring.fullname" . }}-grafana-secret-4upgrade"
       },
       "data": {
          "username": "$(echo -n ${GF_SECURITY_ADMIN_USER} | base64)",
          "password": "$(echo -n ${GF_SECURITY_ADMIN_PASSWORD} | base64)"
       }
    }
    EOF

    curl -k -X DELETE -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
      https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT_HTTPS/api/v1/namespaces/{{ .Release.Namespace }}/secrets/{{ template "monitoring.fullname" . }}-grafana-secret-4upgrade

    curl -k -X POST -H "Content-Type:application/json" -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
      --data-binary @/tmp/body \
      https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT_HTTPS/api/v1/namespaces/{{ .Release.Namespace }}/secrets/

    echo done
{{- end }}
