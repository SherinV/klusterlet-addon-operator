{{- if .Values.nodeExporter.enabled -}}
# Licensed Materials - Property of IBM
# @ Copyright IBM Corporation 2016, 2019. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{ template "prometheus.fullname" . }}
    chart: {{ .Chart.Name }}
    component: nodeexporter
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: "nodeexporter"
  name: {{ template "prometheus.fullname" . }}-nodeexporter
spec:
  updateStrategy:
    type: RollingUpdate
  minReadySeconds: 5
  selector:
    matchLabels:
      app: {{ template "prometheus.fullname" . }}
      component: nodeexporter
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "prometheus.fullname" . }}
        chart: {{ .Chart.Name }}
        component: nodeexporter
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: "nodeexporter"
      name: {{ template "prometheus.fullname" . }}-nodeexporter
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
{{- if eq .Values.mode "managed" }}
      priorityClassName: system-cluster-critical
{{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
    {{- end }}
      hostPID: false
      hostIPC: false
      hostNetwork: false
      containers:
        - name: nodeexporter
          image: {{ .Values.nodeExporter.image.repository }}:{{ .Values.nodeExporter.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          securityContext:
            runAsUser: 65534
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            privileged: false            
            capabilities:
              drop:
              - ALL
          args:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --web.listen-address=127.0.0.1:{{ .Values.nodeExporter.listenPort }}
          resources:
{{ toYaml .Values.nodeExporter.resources | indent 12 }}
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly:  true
            - name: sys
              mountPath: /host/sys
              readOnly: true
      {{- if .Values.tls.enabled }}
        - name: router
          image: {{ .Values.router.image.repository }}:{{ .Values.router.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
              - ALL
              add: [CHOWN, NET_ADMIN, NET_RAW, LEASE, SETGID, SETUID]
          resources:
{{ toYaml .Values.router.resources | indent 12 }}
          command: ["/opt/ibm/router/entry/entrypoint.sh"]
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: "/opt/ibm/router/conf"
              name: router-config
            - mountPath: "/opt/ibm/router/entry"
              name: router-entry
            - mountPath: "/opt/ibm/router/caCerts"
              name: monitoring-ca-certs
            - mountPath: "/opt/ibm/router/certs"
              name: monitoring-certs
        {{- if .Values.nodeExporter.probe.enabled }}
          readinessProbe:
            httpGet:
              path: /healthy
              scheme: HTTPS
              port: {{ .Values.nodeExporter.healthyPort }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthy
              scheme: HTTPS
              port: {{ .Values.nodeExporter.healthyPort }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
        {{- end }}
      {{- end }}
      hostNetwork: true
      hostPID: true
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
      {{- if .Values.tls.enabled }}
        - name: router-config
          configMap:
            name: {{ template "prometheus.fullname" . }}-exporter-router-nginx-config
            items:
              - key: nodeexporter.nginx.conf
                path: nginx.conf
        - name: router-entry
          configMap:
            name: {{ template "monitoring.fullname" . }}-router-entry-config
            defaultMode: 0744
        - name: monitoring-ca-certs
          secret:
            secretName: {{ .Values.tls.ca.secretName }}
        - name: monitoring-certs
          secret:
          {{- if .Values.tls.exporter.existingSecretName }}
            secretName: {{ .Values.tls.exporter.existingSecretName }}
          {{- else }}
            secretName: {{ template "monitoring.fullname" . }}-exporter-certs
          {{- end }}
      {{- end }}
{{- end -}}
