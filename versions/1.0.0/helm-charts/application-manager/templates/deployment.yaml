{{- if .Values.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "application-manager.fullname" . }}
  labels:
    app: {{ template "application-manager.name" . }}
    chart: {{ template "application-manager.chart" . }}
    component: "application-manager"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    connectionManager: {{ .Values.connectionManager }}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ template "application-manager.name" . }}
      component: "application-manager"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "application-manager.name" . }}
        component: "application-manager"
        controller: "operator"
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        chart: {{ template "application-manager.chart" . }}
    spec:
      serviceAccountName: {{ template "application-manager.fullname" . }}
      containers:
      - name: subscription-controller
        {{- if .Values.imageShaDigests.multicluster_operators_subscription }}
        image: "{{ .Values.subscription.image.repository }}/{{ .Values.subscription.image.name }}@{{ .Values.imageShaDigests.multicluster_operators_subscription }}"
        {{- else }}
        image: "{{ .Values.subscription.image.repository }}/{{ .Values.subscription.image.name }}:{{ .Values.subscription.image.tag }}{{ .Values.subscription.image.tagPostfix }}"
        {{- end }}
        imagePullPolicy: "{{ .Values.subscription.image.pullPolicy }}"
        env:
          - name: WATCH_NAMESPACE
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: "subscription-controller"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - ls
          initialDelaySeconds: 15
          periodSeconds: 15
        readinessProbe:
          exec:
            command:
            - ls
          initialDelaySeconds: 15
          periodSeconds: 15
        securityContext:
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        command: ["/usr/local/bin/multicluster-operators-subscription"]
        args:
          - "--alsologtostderr"
          - "--cluster-name={{ .Values.clusterName }}"
          - "--cluster-namespace={{ .Values.clusterNamespace }}"
          - "--hub-cluster-configfile=/var/run/klusterlet/kubeconfig"
        livenessProbe:
          exec:
            command:
            - ls
          initialDelaySeconds: 15
          periodSeconds: 15
        readinessProbe:
          exec:
            command:
            - ls
          initialDelaySeconds: 15
          periodSeconds: 15
        volumeMounts:
          - name: klusterlet-config
            mountPath: /var/run/klusterlet
      volumes:
        - name: klusterlet-config
          secret:
            secretName: {{ .Values.connectionManager }}-hub-kubeconfig
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.imagePullSecret }}"
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
{{- end }}
