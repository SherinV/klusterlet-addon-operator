
# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2018 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "minio.fullname" . }}
  labels:
    app: {{ include "minio.name" . | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  selector:
    matchLabels:
      app: {{ include "minio.name" . | quote }}
      release: {{ .Release.Name | quote }}
  serviceName: {{ template "minio.fullname" . }}
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  podManagementPolicy: "Parallel"
  replicas: {{ default 1 .Values.replicas }}
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default
      labels:
        app: {{ include "minio.name" . | quote }}
        release: {{ .Release.Name | quote }}
    spec:
      serviceAccountName: {{ template "cisController.fullname" . }}-sa
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
    {{- end }}
    {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
    {{- end }}
      containers:
      - name: {{ template "minio.name" . }}-server
        {{- if .Values.imageShaDigests.img_minio }}
        image: "{{ .Values.minio.image.repository }}/{{ .Values.minio.image.name }}@{{ .Values.imageShaDigests.img_minio }}"
        {{- else }}
        image: "{{ .Values.minio.image.repository }}/{{ .Values.minio.image.name }}:{{ .Values.minio.image.tag }}{{ .Values.minio.image.tagPostfix }}"
        {{- end }}
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        args:
        - -C
        - /minio/.minio
        - server
        - /var/lib/minio
        ports:
        - containerPort: 9000
          name: minio
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "cisController.fullname" . }}-secret
              key: access_key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "cisController.fullname" . }}-secret
              key: secret_key
        - name: MINIO_REGION_NAME
          valueFrom:
            secretKeyRef:
              name: {{ template "cisController.fullname" . }}-secret
              key: location
        volumeMounts:
        - name: minio-config
          mountPath: /minio/.minio/config.json
          subPath: config.json
        - name: secret-volume
          mountPath: /minio/.minio/certs
        - name: datadir
          mountPath: /var/lib/minio
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /minio/health/live
            port: 9000
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 30
      securityContext:
        runAsUser: 5001
        runAsGroup: 5001
        fsGroup: 5001
        runAsNonRoot: true
      volumes:
      - name: minio-config
        configMap:
          name: {{ template "minio.fullname" . }}-config
          items:
            - key: config.json
              path: config.json
      - name: secret-volume
        secret:
          defaultMode: 420
          items:
          - key: tls.crt
            path: public.crt
          - key: tls.key
            path: private.key
          - key: tls.crt
            path: CAs/public.crt
          secretName: {{ template "minio.fullname" . }}-tls-cert
      {{- if not .Values.minio.persistence.enabled }}
      - name: datadir
        emptyDir: {}
      {{- end }}
  {{- if .Values.minio.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.minio.persistence.size }}
      {{- if .Values.minio.persistence.storageClass }}
      {{- if (eq "-" .Values.minio.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.minio.persistence.storageClass }}"
      {{- end }}
      {{- end }}
      {{- if .Values.minio.persistence.selector }}
      selector:
{{ toYaml .Values.minio.persistence.selector | indent 8 }}
      {{- end }}
  {{- end }}
