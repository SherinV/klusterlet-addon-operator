{{- if and (.Values.tls.enabled)  (not .Values.tls.clientsecret) -}}

# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016,2019. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: {{ template "mongodb-replicaset.name" . }}
    chart: {{ template "mongodb-replicaset.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "mongodb-replicaset.fullname" . }}-delete-certs
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "99"
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 900
  template:
    metadata:
      name: cert
    spec:
{{- if .Values.priorityClassNameEnabled }}
      priorityClassName: system-cluster-critical
{{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end}}
    {{- end }}
      containers:
      - name: deletecert
        image: {{ .Values.curl.image.repository }}:{{ .Values.curl.image.tag }}
        imagePullPolicy: {{ .Values.curl.image.pullPolicy }}
        command:
        - delete_cert.sh
        env:
          - name: releaseNameSpace
            value: {{ .Release.Namespace }}
        volumeMounts:
        - name: script
          mountPath: /usr/local/bin/delete_cert.sh
          subPath: delete_cert.sh
      volumes:
      - name: script
        configMap:
          name: {{ template "mongodb-replicaset.fullname" . }}-delete-certs
          items:
          - key: delete_cert.sh
            path: delete_cert.sh
            mode: 0777
    {{- if .Values.nodeSelectorEnabled }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- end }}
      tolerations:
        - key: "dedicated"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "CriticalAddonsOnly"
          operator: "Exists"
      restartPolicy: Never

---

apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ template "mongodb-replicaset.name" . }}
    chart: {{ template "mongodb-replicaset.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "mongodb-replicaset.fullname" . }}-delete-certs
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "98"
data:
  delete_cert.sh: |
    #!/bin/bash

    delete_secret() {
        curl -k -X DELETE -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
          https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT_HTTPS/api/v1/namespaces/$releaseNameSpace/secrets/$1
    }

    echo "deleting the secrets"
    delete_secret {{ template "mongodb-replicaset.clientcertsecret" . }}

    echo done
{{- end -}}
