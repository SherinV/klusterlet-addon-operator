# Source: metering/templates/metering-dm-deployment.yaml
#
# The metering-dm pod deploys the Metering Data Manager server as a container
#
# The userid and password for the database are hard-coded in the docker image through
# environment variables in the "containers:" section below
#
{{- if .Values.dm.enabled }}
kind: Deployment
apiVersion: apps/v1

metadata:
  name: {{ template "metering-dm.fullname" . }}
  labels:
    app.kubernetes.io/name: metering-dm
    app.kubernetes.io/component: meteringsvc
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    release: "{{ .Release.Name }}"

spec:
  replicas: 1
  selector:
    matchLabels:
      app: metering-dm
      component: meteringsvc
  template:
    metadata:
      labels:
        app: metering-dm
        component: meteringsvc
        app.kubernetes.io/name: metering-dm
        app.kubernetes.io/component: meteringsvc
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: "{{ .Release.Service }}"
        release: "{{ .Release.Name }}"
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        seccomp.security.alpha.kubernetes.io/pod: docker/default
        productName: IBM Cloud Private
        productID: 01t50000004X1PWAA0
        productVersion: v4.1.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  {{- if .Values.arch }}
                  - {{ .Values.arch }}
                  {{- else }}
                  - {{ template "arch" . }}
                  {{- end }}
      terminationGracePeriodSeconds: 60
{{- if .Values.dm.nodeSelectorEnabled }}
    {{- with .Values.dm.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}
      tolerations:
{{ toYaml .Values.dm.tolerations | indent 8 }}
      initContainers:
        - name: "metering-dm-secret-check"
          image: "{{ .Values.dm.image.repository }}:{{ .Values.dm.image.tag }}"
          imagePullPolicy: "{{ .Values.dm.image.pullPolicy }}"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
          resources:
{{ toYaml .Values.dm.init.resources | indent 12 }}  
          env:
            - name: SECRET_LIST
              value: "{{- if .Values.api.enabled }} icp-serviceid-apikey-secret  icp-metering-receiver-secret {{- end }}       {{ .Values.mongo.username.secret }}       {{ .Values.mongo.password.secret }} {{ .Values.mongo.clustercertssecret }} {{ .Values.mongo.clientcertssecret }}" 
            - name: SECRET_DIR_LIST
              value: "{{- if .Values.api.enabled }} icp-serviceid-apikey-secret  icp-metering-receiver-secret {{- end }} muser-{{ .Values.mongo.username.secret }} mpass-{{ .Values.mongo.password.secret }} {{ .Values.mongo.clustercertssecret }} {{ .Values.mongo.clientcertssecret }}" 
          volumeMounts:
{{- if .Values.api.enabled }}
            - name: icp-serviceid-apikey-secret
              mountPath: /sec/icp-serviceid-apikey-secret
            - name: icp-metering-receiver-certs
              mountPath: /sec/icp-metering-receiver-secret
{{- end }}
            - name: muser-{{ .Values.mongo.username.secret }}
              mountPath: /sec/muser-{{ .Values.mongo.username.secret }}
            - name: mpass-{{ .Values.mongo.password.secret }}
              mountPath: /sec/mpass-{{ .Values.mongo.password.secret }}
            - name: mongodb-ca-cert
              mountPath: /sec/{{ .Values.mongo.clustercertssecret }}
            - name: mongodb-client-cert
              mountPath: /sec/{{ .Values.mongo.clientcertssecret }}
{{ toYaml .Values.secretcheck | indent 10 }}            

        - name: "metering-dm-init"
          image: "{{ .Values.dm.image.repository }}:{{ .Values.dm.image.tag }}"
          imagePullPolicy: "{{ .Values.dm.image.pullPolicy }}"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
          resources:
{{ toYaml .Values.dm.init.resources | indent 12 }}  
          env:
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
            - name: MCM_VERBOSE
              value: "true"
{{- if .Values.api.enabled }}
            - name: ICP_API_KEY
              valueFrom:
                secretKeyRef:
                  name: icp-serviceid-apikey-secret
                  key: ICP_API_KEY
                  optional: true
{{- end }}
            - name: HC_MONGO_HOST
              value: "{{ .Values.mongo.host }}"
            - name: HC_MONGO_PORT
              value: "{{ .Values.mongo.port }}"
            - name: HC_MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.username.secret }}
                  key: {{ .Values.mongo.username.key }}
                  optional: true
            - name: HC_MONGO_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.password.secret }}
                  key: {{ .Values.mongo.password.key }}
                  optional: true
            - name: HC_MONGO_ISSSL
              value: "true"
            - name: HC_MONGO_SSL_CA
              value: "/certs/mongodb-ca/tls.crt"
            - name: HC_MONGO_SSL_CERT
              value: "/certs/mongodb-client/tls.crt"
            - name: HC_MONGO_SSL_KEY
              value: "/certs/mongodb-client/tls.key"
          volumeMounts:
            - name: mongodb-ca-cert
              mountPath: /certs/mongodb-ca
            - name: mongodb-client-cert
              mountPath: /certs/mongodb-client
          command: ["node", "/datamanager/lib/metering_init.js", "verifyOnlyMongo"]
{{- if .Values.dm.priorityClassNameEnabled }}
      priorityClassName: "system-cluster-critical"
{{- end }}
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end}}
{{- end }}
{{- if .Values.serviceAccountNameEnabled }}
      serviceAccountName: {{ template "metering.fullname" . }}
{{- end }}
      containers:
        - name: metering-dm
          image: "{{ .Values.dm.image.repository }}:{{ .Values.dm.image.tag }}"
          imagePullPolicy: "{{ .Values.dm.image.pullPolicy }}"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL          
          resources:
{{ toYaml .Values.dm.resources | indent 12 }}
          ports:
            - containerPort: 3000
{{- if .Values.api.enabled }}
            - containerPort: 5000
{{- end }}
          env:
            - name: METERING_API_ENABLED
              value: "{{ .Values.api.enabled }}"
            - name: HC_DM_USE_HTTPS
              value: "false"
            - name: HC_DM_MCM_RECEIVER_ENABLED
              value: "{{ .Values.api.enabled }}"
            - name: HC_DM_MCM_SENDER_ENABLED
              value: "false"
            - name: HC_DM_STORAGEREADER_ENABLED
              value: "true"
            - name: HC_DM_REPORTER2_ENABLED
              value: "true"
            - name: HC_DM_PURGER2_ENABLED
              value: "true"
            - name: HC_DM_PREAGGREGATOR_ENABLED
              value: "{{ .Values.ui.enabled }}"
            - name: HC_DM_METRICS_ENABLED
              value: "true"
            - name: HC_DM_SELFMETER_PURGER_ENABLED
              value: "{{ .Values.api.enabled }}"
            - name: HC_DM_IS_ICP
              value: "true"
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
{{- if .Values.api.enabled }}
            - name: ICP_API_KEY
              valueFrom:
                secretKeyRef:
                  name: icp-serviceid-apikey-secret
                  key: ICP_API_KEY
                  optional: true
{{- end }}
            - name: HC_MONGO_HOST
              value: "{{ .Values.mongo.host }}"
            - name: HC_MONGO_PORT
              value: "{{ .Values.mongo.port }}"
            - name: HC_MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.username.secret }}
                  key: {{ .Values.mongo.username.key }}
                  optional: true
            - name: HC_MONGO_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.password.secret }}
                  key: {{ .Values.mongo.password.key }}
                  optional: true
            - name: HC_MONGO_ISSSL
              value: "true"
            - name: HC_MONGO_SSL_CA
              value: "/certs/mongodb-ca/tls.crt"
            - name: HC_MONGO_SSL_CERT
              value: "/certs/mongodb-client/tls.crt"
            - name: HC_MONGO_SSL_KEY
              value: "/certs/mongodb-client/tls.key"
{{- if .Values.api.enabled }}
            - name: HC_RECEIVER_SSL_CA
              value: /certs/metering-receiver/ca.crt
            - name: HC_RECEIVER_SSL_CERT
              value: /certs/metering-receiver/tls.crt
            - name: HC_RECEIVER_SSL_KEY
              value: /certs/metering-receiver/tls.key
            - name: CLUSTER_NAME
              value: {{ .Values.external.cluster_name }}
            - name: DEFAULT_IAM_TOKEN_SERVICE_PORT
              value: "{{ .Values.serviceport.iam_token }}"
            - name: DEFAULT_IAM_PAP_SERVICE_PORT
              value: "{{ .Values.serviceport.iam_pap }}"
{{- end }}
            - name: HC_DM_ALLOW_TEST
              value: "false"
          volumeMounts:
            - name: mongodb-ca-cert
              mountPath: /certs/mongodb-ca
            - name: mongodb-client-cert
              mountPath: /certs/mongodb-client
{{- if .Values.api.enabled }}
            - name: icp-metering-receiver-certs
              mountPath: /certs/metering-receiver
{{- end }}             
          readinessProbe:
            httpGet:
              path: "/readinessProbe"
              scheme: HTTP
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 15
          livenessProbe:
            httpGet:
              path: "/livenessProbe"
              scheme: HTTP
              port: 3000
            initialDelaySeconds: 305
            periodSeconds: 300
            timeoutSeconds: 5
      volumes:
        - name: mongodb-ca-cert
          secret:
            defaultMode: 0644
            secretName: {{ .Values.mongo.clustercertssecret }}
            optional: true
        - name: mongodb-client-cert
          secret:
            defaultMode: 0644
            secretName: {{ .Values.mongo.clientcertssecret }}
            optional: true
        - name: muser-{{ .Values.mongo.username.secret }}
          secret:
            defaultMode: 0644
            secretName: {{ .Values.mongo.username.secret }}
            optional: true
        - name: mpass-{{ .Values.mongo.password.secret }}
          secret:
            defaultMode: 0644
            secretName: {{ .Values.mongo.password.secret }}
            optional: true
{{- if .Values.api.enabled }}
        - name: icp-metering-receiver-certs
          secret:
            defaultMode: 0644
            secretName: icp-metering-receiver-secret
            optional: true
        - name: icp-serviceid-apikey-secret
          secret:
            defaultMode: 0644
            secretName: icp-serviceid-apikey-secret
            optional: true
{{- end }}
{{- end }}
