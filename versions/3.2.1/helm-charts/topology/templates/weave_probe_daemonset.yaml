# Licensed Materials - Property of IBM
# 5737-E67
# (C) Copyright IBM Corporation 2016, 2019 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

{{ if .Values.enabled }}
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "topology.fullname" . }}-weave-scope
  annotations:
    cloud.weave.works/launcher-info: |-
      {
        "original-request": {
          "url": "/k8s/scope.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIxMCIsIEdpdFZlcnNpb246InYxLjEwLjAiLCBHaXRDb21taXQ6ImZjMzJkMmYzNjk4ZTM2YjkzMzIyYTM0NjVmNjNhMTRlOWYwZWFlYWQiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDE4LTAzLTI3VDAwOjEzOjAyWiIsIEdvVmVyc2lvbjoiZ28xLjkuNCIsIENvbXBpbGVyOiJnYyIsIFBsYXRmb3JtOiJkYXJ3aW4vYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjEwIiwgR2l0VmVyc2lvbjoidjEuMTAuMCtpY3AtZWUiLCBHaXRDb21taXQ6IjljYjY0ZGU0Y2E0ZDAzOWMzNWY0YTI5NzIxYWE1Y2Y3ODc2NDhhMTUiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDE4LTA0LTI3VDA2OjMyOjE4WiIsIEdvVmVyc2lvbjoiZ28xLjkuMyIsIENvbXBpbGVyOiJnYyIsIFBsYXRmb3JtOiJsaW51eC9hbWQ2NCJ9Cg==",
          "date": "Tue May 08 2018 17:14:07 GMT+0000 (UTC)"
        },
        "email-address": "support@weave.works"
      }
  labels:
    app: {{ template "topology.name" . }}
    chart: {{ template "topology.chart" . }}
    component: "weave-scope"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  minReadySeconds: 5
  selector:
    matchLabels:
      app: {{ template "topology.name" . }}
      component: "weave-scope"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "topology.name" . }}
        chart: {{ template "topology.chart" . }}
        component: "weave-scope"
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      serviceAccountName: {{ template "topology.fullname" . }}
      containers:
        - name: scope-agent
          args:
            - '--mode=probe'
            - '--no-app'
            - '--weave=false'
            {{- if eq .Values.containerRuntime "docker" }}
            - '--probe.docker.bridge=docker0'
            - '--probe.docker=true'
            {{- else if eq .Values.containerRuntime "containerd" }}
            - '--probe.cri=true'
            - '--probe.cri.endpoint=/run/containerd/containerd.sock'
            {{- end }}
            - '--probe.kubernetes=true'
            - '--probe.insecure=true'
            - '--probe.no-controls=true'
            - '--probe.tls.key=/opt/ibm/router/certs/tls.key'
            - '--probe.tls.cert=/opt/ibm/router/certs/tls.crt'
            - '{{ template "topology.fullname" . }}-weave-scope.{{ .Release.Namespace }}:443'
          command:
            - /home/weave/scope
          env:
            - name: DISABLE_BASICAUTH
              value: "true"
            - name: KUBERNETES_NODENAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          image: "{{ .Values.weave.repository }}:{{ .Values.weave.tag }}"
          imagePullPolicy: {{ .Values.weave.pullPolicy }}
          securityContext:
            privileged: true
          volumeMounts:
            {{- if .Values.containerd }}
            - name: containerd-socket
              mountPath: /run/containerd/containerd.sock
            {{- else }}
            - name: docker-socket
              mountPath: /var/run/docker.sock
            {{- end }}
            - name: scope-plugins
              mountPath: /var/run/scope/plugins
            - name: sys-kernel-debug
              mountPath: /sys/kernel/debug
            - name: weavescope-client-secret
              mountPath: /opt/ibm/router/certs
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        {{- if .Values.containerd }}
        - name: containerd-socket
          hostPath:
            path: /run/containerd/containerd.sock
        {{- else }}
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        {{- end }}
        - name: scope-plugins
          hostPath:
            path: /var/run/scope/plugins
        - name: sys-kernel-debug
          hostPath:
            path: /sys/kernel/debug
        - name: weavescope-client-secret
          secret:
            secretName: {{ template "topology.fullname" . }}-client-secret
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.imagePullSecret }}"
      {{- end }}
  updateStrategy:
    type: RollingUpdate
{{ end }}
